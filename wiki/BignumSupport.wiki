<font size="3">
The default native Lua number type can hold integers of up to 15 decimal digits, while Firebird values in `BIGINT` and `DECIMAL(16-18,any_scale)` columns can span the whole 64bit signed integer range, which is 18 full digits, regardless of where you put the dot.

Firebird stores decimals as scaled-up integers internally, so for instance the number 12.34 on a DECIMAL(18,4) column is stored as the 64bit integer whose decimal representation is 123400. The 64bit integer range referred to above applies to this number.

Fbclient limits the use of Lua numbers for reading and writing integers and scaled-up decimals to the exact range -2^52^ to 2^52-1^ (as defined in [http://code.google.com/p/fbclient/source/browse/lua/fbclient/util.lua util.lua], constants `MIN_LUAINT` and `MAX_LUAINT`). For numbers outside this range you need to use an arbitrary precision (bignum) library.

===Supported bignum libraries===
  1. [http://luaforge.net/projects/ldecnumber/ ldecNumber], Lua binding of [http://speleotrove.com/decimal/decnumber.html decNumber]; integrated in [http://code.google.com/p/fbclient/source/browse/lua/fbclient/decimal_ldecnumber.lua decimal_ldecnumber.lua]
  1. [http://luaforge.net/projects/lmapm/ lmapm], Lua binding of [http://www.tc.umn.edu/~ringx004/mapm-main.html MAPM]; integrated in [http://code.google.com/p/fbclient/source/browse/lua/fbclient/decimal_lmapm.lua decimal_lmapm.lua]
  1. [http://www.tecgraf.puc-rio.br/~lhf/ftp/lua/#lbc lbc], Lua binding of [http://www.gnu.org/software/bc/ bc]; integrated in [http://code.google.com/p/fbclient/source/browse/lua/fbclient/decimal_lbc.lua decimal_lbc.lua].

===1. Installing and using ldecNumber===

ldecNumber builds on Linux through !LuaRocks: `$luarocks install ldecnumber`.

For Windows users it's always a little harder:
  1) install Visual C++ (I used the 2008 Express Edition)
  1) copy [http://msinttypes.googlecode.com/svn/trunk/stdint.h stdint.h] to Visual Studio's `include` dir (mine was `C:\Program Files\Microsoft Visual Studio 9.0\VC\include`)
  1) open a "Visual Studio Command Prompt" (shortcut in Start Menu)
  1) type `luarocks install ldecnumber`.

===`xs:setdecnumber(decnumber)`===
===`xs:getdecnumber() -> decnumber`===

Usage:
{{{
require 'ldecNumber'
require 'fbclient.decimal_ldecnumber'
...
params[1]:setdecnumber(decNumber.tonumber('12345678901234.5678'))
params[1]:set(decNumber.tonumber('12345678901234.5678'))
...
print(columns[1]:getdecnumber())
print(columns[1]:get())
}}}

===2. Installing and using lmapm===

lmapm builds through !LuaRocks: `$luarocks install lmapm`, but you have to download and build MAPM yourself first, and you may have to pass `MAPM_DIR` to `luarocks`. ~~There are also precompiled [http://luben.se/rocks/index.html binaries] courtesy of Pierre !LeMoine. Add `http://luben.se/rocks/` to the list of rocks repositories in your !LuaRocks config file.~~

===`xs:setmapm(mapm_number)`===
===`xs:getmapm() -> mapm_number`===

Usage:
{{{
require 'mapm'
require 'fbclient.decimal_lmapm'
...
params[1]:setmapm(mapm.number('12345678901234.5678'))
params[1]:set(mapm.number('12345678901234.5678'))
...
print(columns[1]:getmapm())
print(columns[1]:get())
}}}

===3. Installing and using lbc===

lbc builds on Linux through !LuaRocks: `$luarocks install lbc`. It doesn't build automatically on Windows because there's no Makefile.win in the package as required by !LuaRocks. ~~There are [http://luben.se/rocks/index.html binary rocks] though courtesy of Pierre !LeMoine. Add `http://luben.se/rocks/` to the list of rocks repositories in your !LuaRocks config file.~~ 

===`xs:setbc(bc_number)`===
===`xs:getbc() -> bc_number`===

Usage:
{{{
require 'bc'
require 'fbclient.decimal_lbc'
...
params[1]:setbc(bc.number('12345678901234.5678'))
params[1]:set(bc.number('12345678901234.5678'))
...
print(columns[1]:getbc())
print(columns[1]:get())
}}}

===Loading more than one bignum module===

You can load more than one fbclient decimal module, in which case `xs:get()` will  preserve its behavior acquired after loading the first module (i.e. will continue to return a bignum of the type provided by the first loaded module).

===Hooking in more bignum libraries===

Hooking in more bignum libraries is trivial and can be done externally to fbclient at runtime.